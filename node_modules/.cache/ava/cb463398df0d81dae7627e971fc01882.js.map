{"version":3,"sources":["server.test.js"],"names":["test","require","request","cheerio","createServer","configureDatabase","t","fail","context","app","get","expect","end","err","res","pass","$","load","text","is","first","true","indexOf","post","send","name","genre","id","then","connection","select","movies","length"],"mappings":";;;;;AAAA,IAAIA,OAAOC,QAAQ,KAAR,CAAX;AACA,IAAIC,UAAUD,QAAQ,WAAR,CAAd;AACA,IAAIE,UAAUF,QAAQ,SAAR,CAAd;;AAEA,IAAIG,eAAeH,QAAQ,WAAR,CAAnB;;AAEA,IAAII,oBAAoBJ,QAAQ,2BAAR,CAAxB;AACAI,kBAAkBL,IAAlB,EAAwBI,YAAxB;;AAEAJ,KAAK,yBAAL,EAAiCM,CAAD,IAAO;AACrCA,IAAEC,IAAF;AACAL,UAAQI,EAAEE,OAAF,CAAUC,GAAlB,EACCC,GADD,CACK,GADL,EAECC,MAFD,CAEQ,GAFR,EAGCC,GAHD,CAGK,CAACC,GAAD,EAAMC,GAAN,KAAc;AACjB,QAAI,CAACD,GAAL,EAAUP,EAAES,IAAF;AACX,GALD;AAMD,CARD;;AAUAf,KAAK,2CAAL,EAAmDM,CAAD,IAAO;AACvDJ,UAAQI,EAAEE,OAAF,CAAUC,GAAlB,EACGC,GADH,CACO,GADP,EAEGC,MAFH,CAEU,GAFV,EAGGC,GAHH,CAGO,CAACC,GAAD,EAAMC,GAAN,KAAc;AACjB,UAAME,IAAIb,QAAQc,IAAR,CAAaH,IAAII,IAAjB,CAAV;AACAZ,MAAEa,EAAF,CAAKH,EAAE,IAAF,EAAQI,KAAR,GAAgBF,IAAhB,EAAL,EAA6B,gBAA7B;AACA,QAAG,CAACL,GAAJ,EAASP,EAAES,IAAF;AACV,GAPH;AAQD,CATD;;AAWAf,KAAK,oCAAL,EAA4CM,CAAD,IAAO;AAChDJ,UAAQI,EAAEE,OAAF,CAAUC,GAAlB,EACGC,GADH,CACO,UADP,EAEGC,MAFH,CAEU,GAFV,EAGGC,GAHH,CAGO,CAACC,GAAD,EAAMC,GAAN,KAAc;AAAA;;AACjBR,MAAEe,IAAF,uBAAO,+EAAIH,IAAJ,oCAASI,OAAT,CAAiB,iBAAjB,oCAAsC,CAAC,CAAvC,sBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,QAAG,CAACT,GAAJ,EAASP,EAAES,IAAF;AACV,GANH;AAOD,CARD;;AAUAf,KAAK,wCAAL,EAAgDM,CAAD,IAAO;AACpDJ,UAAQI,EAAEE,OAAF,CAAUC,GAAlB,EACGc,IADH,CACQ,WADR,EAEGC,IAFH,CAEQ,EAACC,MAAK,kBAAN,EAA0BC,OAAO,OAAjC,EAA0CC,IAAI,EAA9C,EAFR,EAGGhB,MAHH,CAGU,GAHV,EAIGiB,IAJH,CAISd,GAAD,IAAS;AACb,WAAOR,EAAEE,OAAF,CAAUqB,UAAV,CAAqB,QAArB,EAA+BC,MAA/B,EAAP;AACAxB,MAAEa,EAAF,CAAKY,OAAOC,MAAZ,EAAoB,EAApB;AACH,GAPD;AAQD,CATD","file":"server.test.js","sourcesContent":["var test = require('ava')\nvar request = require('supertest')\nvar cheerio = require('cheerio')\n\nvar createServer = require('../server')\n\nvar configureDatabase = require('./helpers/database-config')\nconfigureDatabase(test, createServer)\n\ntest('Check if homepage loads', (t) => {\n  t.fail()\n  request(t.context.app)\n  .get('/')\n  .expect(200)\n  .end((err, res) => {\n    if (!err) t.pass()\n  })\n})\n\ntest('Check if the title is displayed correctly', (t) => {\n  request(t.context.app)\n    .get('/')\n    .expect(200)\n    .end((err, res) => {\n      const $ = cheerio.load(res.text)\n      t.is($('h1').first().text(), 'The Undecideds')\n      if(!err) t.pass()\n    })\n})\n\ntest('Check if we can find a movie by ID', (t) => {\n  request(t.context.app)\n    .get('/movie/4')\n    .expect(200)\n    .end((err, res) => {\n      t.true(res.text.indexOf('The Dark Knight') > -1)\n      if(!err) t.pass()\n    })\n})\n\ntest('Check if user can add their own movies', (t) => {\n  request(t.context.app)\n    .post('/addmovie')\n    .send({name:'The Intouchables', genre: 'drama', id: 21})\n    .expect(302)\n    .then((res) => {\n      return t.context.connection('movies').select()\n      t.is(movies.length, 21)\n  })\n})\n"]}